generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model angajat {
  id            Int        @id @default(autoincrement())
  nume          String     @db.VarChar(20)
  prenume       String     @db.VarChar(20)
  dataAngajarii DateTime   @default(now()) @db.Date
  contract      contract[]
}

model contract {
  dataInceput DateTime @db.Date
  dataFinal   DateTime @db.Date
  idAngajat   Int
  idPost      Int?
  idMagazin   Int?
  angajat     angajat  @relation(fields: [idAngajat], references: [id], onDelete: Cascade, map: "contract_ibfk_1")
  post        post?    @relation(fields: [idPost], references: [id], onUpdate: SetNull, map: "contract_ibfk_2")
  magazin     magazin? @relation(fields: [idMagazin], references: [id], onUpdate: SetNull, map: "contract_ibfk_3")

  @@id([idAngajat, dataInceput])
  @@index([idAngajat, dataInceput], map: "id")
  @@index([idMagazin], map: "idMagazin")
  @@index([idPost], map: "idPost")
}

model franciza {
  id            Int       @id @default(autoincrement())
  locatie       String    @db.VarChar(100)
  numeDetinator String    @db.VarChar(30)
  magazin       magazin[]
}

model magazin {
  id              Int        @id @default(autoincrement())
  adresa          String     @db.VarChar(100)
  programStart    String     @db.VarChar(10)
  programFinal    String     @db.VarChar(10)
  dataDeschiderii DateTime   @default(now()) @db.Date
  idFranciza      Int?
  franciza        franciza?  @relation(fields: [idFranciza], references: [id], onUpdate: SetNull, map: "magazin_ibfk_1")
  contract        contract[]
  raion           raion[]

  @@index([idFranciza], map: "idFranciza")
}

model oferta {
  id                Int              @id @default(autoincrement())
  nume              String           @db.VarChar(45)
  dataInceput       DateTime         @db.Date
  dataFinal         DateTime         @db.Date
  procentajReducere Float            @db.Float
  istoric_oferte    istoric_oferte[]
}

model post {
  id           Int        @id @default(autoincrement())
  titlu        String     @db.VarChar(20)
  salariu      Float      @db.Float
  programStart String     @db.VarChar(10)
  programFinal String     @db.VarChar(10)
  contract     contract[]
}

model produs {
  id             Int              @id @default(autoincrement())
  nume           String           @db.VarChar(45)
  pret           Float            @db.Float
  istoric_oferte istoric_oferte[]
  produs_raion   produs_raion[]
}

model produs_raion {
  idProdus Int
  idRaion  Int
  produs   produs @relation(fields: [idProdus], references: [id], onDelete: Cascade, map: "produs_raion_ibfk_1")
  raion    raion  @relation(fields: [idRaion], references: [id], onDelete: Cascade, map: "produs_raion_ibfk_2")

  @@id([idProdus, idRaion])
  @@index([idRaion], map: "idRaion")
}

model raion {
  id           Int            @id @default(autoincrement())
  nume         String         @db.VarChar(20)
  tipRaion     String         @db.VarChar(20)
  idMagazin    Int
  magazin      magazin        @relation(fields: [idMagazin], references: [id], onDelete: Cascade, map: "raion_ibfk_1")
  produs_raion produs_raion[]

  @@index([idMagazin], map: "idMagazin")
}

model istoric_oferte {
  idProdus Int
  idOferta Int
  produs   produs @relation(fields: [idProdus], references: [id], onDelete: Cascade, map: "istoric_oferte_ibfk_1")
  oferta   oferta @relation(fields: [idOferta], references: [id], onDelete: Cascade, map: "istoric_oferte_ibfk_2")

  @@id([idProdus, idOferta])
  @@index([idOferta], map: "idOferta")
}
